// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Savings.API.Data;

#nullable disable

namespace Savings.API.Data.Migrations
{
    [DbContext(typeof(SavingDbContext))]
    [Migration("20240605153426_ExtendAccountModelWithConcreteTypes")]
    partial class ExtendAccountModelWithConcreteTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Savings.API.Models.Domain.SavingAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountNumber")
                        .HasColumnType("uuid");

                    b.Property<string>("AccrualPeriod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("EmailOwner")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("InterestRate")
                        .HasColumnType("double precision");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountNumber");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Savings.API.Models.Domain.HighYieldAccount", b =>
                {
                    b.HasBaseType("Savings.API.Models.Domain.SavingAccount");

                    b.Property<int>("WithdrawalLimitsPerMonth")
                        .HasColumnType("integer");

                    b.ToTable("HighYieldAccounts", (string)null);
                });

            modelBuilder.Entity("Savings.API.Models.Domain.MoneyMarketAccount", b =>
                {
                    b.HasBaseType("Savings.API.Models.Domain.SavingAccount");

                    b.Property<int>("WithdrawalLimitsPerMonth")
                        .HasColumnType("integer");

                    b.ToTable("MoneyMarketAccounts", (string)null);
                });

            modelBuilder.Entity("Savings.API.Models.Domain.RegularAccount", b =>
                {
                    b.HasBaseType("Savings.API.Models.Domain.SavingAccount");

                    b.ToTable("RegularAccounts", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
